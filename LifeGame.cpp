// LifeGame.cpp : このファイルには 'main' 関数が含まれています。プログラム実行の開始と終了がそこで行われます。
//

#include <iostream>

#define N 10
#define M 10
char a[N + 2][M + 2], b[N + 2][M + 2];

int main()
{
	int i, j, g;

	a[N / 2][M / 2] = a[N / 2 - 1][M / 2] = a[N / 2 + 1][M / 2]
		= a[N / 2][M / 2 - 1] = a[N / 2 - 1][M / 2 + 1] = 1;

	for (g = 1; g <= 50; g++)
	{
		printf("Generation %4d", g);
		for (i = 1; i <= N; i++)
		{
			for (j=1; j<=M; j++)
				if (a[i][j])
				{
					printf("*");
					b[i - 1][j - 1]++; b[i - 1][j]++; b[i - 1][j + 1]++;
					b[i][j - 1]++;					b[i][j + 1]++;
					b[i + 1][j - 1]++; b[i + 1][j]++; b[i + 1][j + 1]++;
				}
				else printf(".");
			printf("\n");
		}
		for (i=0; i<=N+1; i++)
			for (j = 0; j <= M + 1; j++)
			{
				if (b[i][j] != 2) a[i][j] = (b[i][j] == 3);
				b[i][j] = 0;
			}

	}

}

// プログラムの実行: Ctrl + F5 または [デバッグ] > [デバッグなしで開始] メニュー
// プログラムのデバッグ: F5 または [デバッグ] > [デバッグの開始] メニュー

// 作業を開始するためのヒント: 
//    1. ソリューション エクスプローラー ウィンドウを使用してファイルを追加/管理します 
//   2. チーム エクスプローラー ウィンドウを使用してソース管理に接続します
//   3. 出力ウィンドウを使用して、ビルド出力とその他のメッセージを表示します
//   4. エラー一覧ウィンドウを使用してエラーを表示します
//   5. [プロジェクト] > [新しい項目の追加] と移動して新しいコード ファイルを作成するか、[プロジェクト] > [既存の項目の追加] と移動して既存のコード ファイルをプロジェクトに追加します
//   6. 後ほどこのプロジェクトを再び開く場合、[ファイル] > [開く] > [プロジェクト] と移動して .sln ファイルを選択します
